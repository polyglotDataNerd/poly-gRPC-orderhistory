// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderhistory.proto

package definiton

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HistoryRequest struct {
	Gid                  string   `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HistoryRequest) Reset()         { *m = HistoryRequest{} }
func (m *HistoryRequest) String() string { return proto.CompactTextString(m) }
func (*HistoryRequest) ProtoMessage()    {}
func (*HistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd279eed690ecc7b, []int{0}
}

func (m *HistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryRequest.Unmarshal(m, b)
}
func (m *HistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryRequest.Marshal(b, m, deterministic)
}
func (m *HistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryRequest.Merge(m, src)
}
func (m *HistoryRequest) XXX_Size() int {
	return xxx_messageInfo_HistoryRequest.Size(m)
}
func (m *HistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryRequest proto.InternalMessageInfo

func (m *HistoryRequest) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

type HistoryMap struct {
	Gid                  string               `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	OrderDate            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=orderDate,proto3" json:"orderDate,omitempty"`
	OrderID              string               `protobuf:"bytes,3,opt,name=orderID,proto3" json:"orderID,omitempty"`
	Entree               string               `protobuf:"bytes,4,opt,name=entree,proto3" json:"entree,omitempty"`
	CustomerId           string               `protobuf:"bytes,5,opt,name=customerId,proto3" json:"customerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HistoryMap) Reset()         { *m = HistoryMap{} }
func (m *HistoryMap) String() string { return proto.CompactTextString(m) }
func (*HistoryMap) ProtoMessage()    {}
func (*HistoryMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd279eed690ecc7b, []int{1}
}

func (m *HistoryMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryMap.Unmarshal(m, b)
}
func (m *HistoryMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryMap.Marshal(b, m, deterministic)
}
func (m *HistoryMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryMap.Merge(m, src)
}
func (m *HistoryMap) XXX_Size() int {
	return xxx_messageInfo_HistoryMap.Size(m)
}
func (m *HistoryMap) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryMap.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryMap proto.InternalMessageInfo

func (m *HistoryMap) GetGid() string {
	if m != nil {
		return m.Gid
	}
	return ""
}

func (m *HistoryMap) GetOrderDate() *timestamp.Timestamp {
	if m != nil {
		return m.OrderDate
	}
	return nil
}

func (m *HistoryMap) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *HistoryMap) GetEntree() string {
	if m != nil {
		return m.Entree
	}
	return ""
}

func (m *HistoryMap) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

type HistoryResponse struct {
	Collection           []*HistoryMap `protobuf:"bytes,1,rep,name=collection,proto3" json:"collection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *HistoryResponse) Reset()         { *m = HistoryResponse{} }
func (m *HistoryResponse) String() string { return proto.CompactTextString(m) }
func (*HistoryResponse) ProtoMessage()    {}
func (*HistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd279eed690ecc7b, []int{2}
}

func (m *HistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HistoryResponse.Unmarshal(m, b)
}
func (m *HistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HistoryResponse.Marshal(b, m, deterministic)
}
func (m *HistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistoryResponse.Merge(m, src)
}
func (m *HistoryResponse) XXX_Size() int {
	return xxx_messageInfo_HistoryResponse.Size(m)
}
func (m *HistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HistoryResponse proto.InternalMessageInfo

func (m *HistoryResponse) GetCollection() []*HistoryMap {
	if m != nil {
		return m.Collection
	}
	return nil
}

func init() {
	proto.RegisterType((*HistoryRequest)(nil), "definiton.HistoryRequest")
	proto.RegisterType((*HistoryMap)(nil), "definiton.HistoryMap")
	proto.RegisterType((*HistoryResponse)(nil), "definiton.HistoryResponse")
}

func init() { proto.RegisterFile("orderhistory.proto", fileDescriptor_fd279eed690ecc7b) }

var fileDescriptor_fd279eed690ecc7b = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0xfb, 0x40,
	0x10, 0xc6, 0xff, 0xfb, 0x8f, 0x56, 0x32, 0x85, 0x2a, 0x0b, 0xca, 0x9a, 0x83, 0x86, 0x9c, 0x72,
	0xda, 0x4a, 0x44, 0xf0, 0x01, 0x0a, 0x6d, 0x11, 0x2f, 0x51, 0xc1, 0x6b, 0x9a, 0x4c, 0xe3, 0x42,
	0x92, 0x8d, 0xbb, 0x93, 0x83, 0xaf, 0xe4, 0x53, 0x8a, 0x9b, 0xa4, 0x2d, 0xd4, 0xdb, 0xce, 0x7c,
	0xbf, 0x9d, 0x6f, 0xe6, 0x03, 0xae, 0x4d, 0x81, 0xe6, 0x43, 0x59, 0xd2, 0xe6, 0x4b, 0xb6, 0x46,
	0x93, 0xe6, 0x7e, 0x81, 0x5b, 0xd5, 0x28, 0xd2, 0x4d, 0x70, 0x5b, 0x6a, 0x5d, 0x56, 0x38, 0x77,
	0xc2, 0xa6, 0xdb, 0xce, 0x49, 0xd5, 0x68, 0x29, 0xab, 0xdb, 0x9e, 0x8d, 0x22, 0x98, 0xad, 0xfa,
	0xcf, 0x29, 0x7e, 0x76, 0x68, 0x89, 0x5f, 0x80, 0x57, 0xaa, 0x42, 0xb0, 0x90, 0xc5, 0x7e, 0xfa,
	0xfb, 0x8c, 0xbe, 0x19, 0xc0, 0x00, 0x3d, 0x67, 0xed, 0x31, 0xc0, 0x1f, 0xc1, 0x77, 0x6b, 0x2c,
	0x32, 0x42, 0xf1, 0x3f, 0x64, 0xf1, 0x34, 0x09, 0x64, 0xef, 0x2c, 0x47, 0x67, 0xf9, 0x3a, 0x3a,
	0xa7, 0x7b, 0x98, 0x0b, 0x38, 0x73, 0xc5, 0x7a, 0x21, 0x3c, 0x37, 0x6f, 0x2c, 0xf9, 0x15, 0x4c,
	0xb0, 0x21, 0x83, 0x28, 0x4e, 0x9c, 0x30, 0x54, 0xfc, 0x06, 0x20, 0xef, 0x2c, 0xe9, 0x1a, 0xcd,
	0xba, 0x10, 0xa7, 0x4e, 0x3b, 0xe8, 0x44, 0x2b, 0x38, 0xdf, 0x1d, 0x64, 0x5b, 0xdd, 0x58, 0xe4,
	0x0f, 0x00, 0xb9, 0xae, 0x2a, 0xcc, 0x49, 0xe9, 0x46, 0xb0, 0xd0, 0x8b, 0xa7, 0xc9, 0xa5, 0xdc,
	0x85, 0x24, 0xf7, 0xb7, 0xa5, 0x07, 0x60, 0xf2, 0x0e, 0xfe, 0xcb, 0x72, 0xd0, 0xf8, 0x13, 0xcc,
	0x96, 0x48, 0x6f, 0x16, 0xcd, 0xd8, 0xb9, 0x3e, 0x9e, 0x30, 0x44, 0x18, 0x04, 0x7f, 0x49, 0xfd,
	0x32, 0xd1, 0xbf, 0x3b, 0xb6, 0x99, 0xb8, 0x50, 0xee, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x8f,
	0x87, 0x1a, 0x1d, 0xbd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SGHistoryClient is the client API for SGHistory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SGHistoryClient interface {
	GetUserHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (SGHistory_GetUserHistoryClient, error)
}

type sGHistoryClient struct {
	cc *grpc.ClientConn
}

func NewSGHistoryClient(cc *grpc.ClientConn) SGHistoryClient {
	return &sGHistoryClient{cc}
}

func (c *sGHistoryClient) GetUserHistory(ctx context.Context, in *HistoryRequest, opts ...grpc.CallOption) (SGHistory_GetUserHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SGHistory_serviceDesc.Streams[0], "/definiton.SGHistory/GetUserHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &sGHistoryGetUserHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SGHistory_GetUserHistoryClient interface {
	Recv() (*HistoryResponse, error)
	grpc.ClientStream
}

type sGHistoryGetUserHistoryClient struct {
	grpc.ClientStream
}

func (x *sGHistoryGetUserHistoryClient) Recv() (*HistoryResponse, error) {
	m := new(HistoryResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SGHistoryServer is the server API for SGHistory service.
type SGHistoryServer interface {
	GetUserHistory(*HistoryRequest, SGHistory_GetUserHistoryServer) error
}

// UnimplementedSGHistoryServer can be embedded to have forward compatible implementations.
type UnimplementedSGHistoryServer struct {
}

func (*UnimplementedSGHistoryServer) GetUserHistory(req *HistoryRequest, srv SGHistory_GetUserHistoryServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUserHistory not implemented")
}

func RegisterSGHistoryServer(s *grpc.Server, srv SGHistoryServer) {
	s.RegisterService(&_SGHistory_serviceDesc, srv)
}

func _SGHistory_GetUserHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(HistoryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SGHistoryServer).GetUserHistory(m, &sGHistoryGetUserHistoryServer{stream})
}

type SGHistory_GetUserHistoryServer interface {
	Send(*HistoryResponse) error
	grpc.ServerStream
}

type sGHistoryGetUserHistoryServer struct {
	grpc.ServerStream
}

func (x *sGHistoryGetUserHistoryServer) Send(m *HistoryResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _SGHistory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "definiton.SGHistory",
	HandlerType: (*SGHistoryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUserHistory",
			Handler:       _SGHistory_GetUserHistory_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "orderhistory.proto",
}
